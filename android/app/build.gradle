plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

// Resolve version from pubspec.yaml when flutter extension lacks it
def pubspecFile = new File(rootProject.projectDir, "pubspec.yaml")
def versionNameDefault = "1.0.0"
def versionCodeDefault = 1
if (pubspecFile.exists()) {
    def matcher = (pubspecFile.text =~ /version:\s*([0-9.]+)(?:\+([0-9]+))?/)
    if (matcher.find()) {
        versionNameDefault = matcher.group(1)
        if (matcher.groupCount() > 1 && matcher.group(2)) {
            versionCodeDefault = matcher.group(2).toInteger()
        }
    }
}
def flutterExt = project.extensions.findByName("flutter")
android {
    namespace = "com.example.xstream"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.xstream"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = (flutterExt?.metaClass?.respondsTo(flutterExt, "getVersionCode") ? flutterExt.getVersionCode() : versionCodeDefault)
        versionName = (flutterExt?.metaClass?.respondsTo(flutterExt, "getVersionName") ? flutterExt.getVersionName() : versionNameDefault)
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
